As an expert in Cypher Query Language and Memgraph graph database, please help me with generating VALID Cypher queries.

# Important considerations:

## Rules for Cypher query generation
When generating Cypher queries, follow these rules:
1. Variable Usage:
Always reference variables directly, without square brackets.
- Correct: p['status']['phase']
- Incorrect: [p]['status']['phase']
2. Filtering:
- Use only the WHERE clause for filtering nodes or relationships. Do not use other filtering mechanisms. For example, instead of `MATCH (p:Pod {metadata: {name: 'pyroscope-compactor-2'}})-[:HasLogs]->(l:Logs) RETURN l.content AS logs LIMIT 1` use `MATCH (p:Pod)-[:HasLogs]->(l:Logs) WHERE p.metadata.name = 'pyroscope-compactor-2' RETURN l.content AS logs LIMIT 1`.
- The EXISTS function is is designed to check for the presence of a specific pattern or path. It expects a single, unambiguous relationship or a simple pattern involving a single relation type and its connected nodes. To achieve the desired outcome of checking for multiple conditions, you should use separate EXISTS calls or structure your query to clearly define the single relation being checked within each EXISTS clause.
3. Property Names:
Always use single quotes (') around property names when accessing properties, especially if they may contain special characters.
- Correct: p['status']['phase']
- Incorrect: p[status][phase] or p["status"]["phase"]

## Detailed graph schema
Node properties:
  Cluster: 4 properties (cluster_url: STRING, info: #/definitions/io.k8s.apimachinery.pkg.version.Info, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, name: STRING)
  ConfigMap: 6 properties (apiVersion: STRING, binaryData: MAP, data: MAP, immutable: BOOLEAN, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta)
  DaemonSet: 5 properties (apiVersion: STRING, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, spec: #/definitions/io.k8s.api.apps.v1.DaemonSetSpec, status: #/definitions/io.k8s.api.apps.v1.DaemonSetStatus)
  Deployment: 5 properties (apiVersion: STRING, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, spec: #/definitions/io.k8s.api.apps.v1.DeploymentSpec, status: #/definitions/io.k8s.api.apps.v1.DeploymentStatus)
  EndpointAddress: 5 properties (hostname: STRING, ip: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, nodeName: STRING, targetRef: #/definitions/io.k8s.api.core.v1.ObjectReference)
  Endpoints: 4 properties (apiVersion: STRING, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, subsets: [#/definitions/io.k8s.api.core.v1.EndpointSubset])
  Host: 2 properties (metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, name: STRING)
  Ingress: 5 properties (apiVersion: STRING, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, spec: #/definitions/io.k8s.api.networking.v1.IngressSpec, status: #/definitions/io.k8s.api.networking.v1.IngressStatus)
  IngressServiceBackend: 3 properties (metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, name: STRING, port: #/definitions/io.k8s.api.networking.v1.ServiceBackendPort)
  Job: 5 properties (apiVersion: STRING, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, spec: #/definitions/io.k8s.api.batch.v1.JobSpec, status: #/definitions/io.k8s.api.batch.v1.JobStatus)
  Logs: 2 properties (content: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta)
  Namespace: 5 properties (apiVersion: STRING, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, spec: #/definitions/io.k8s.api.core.v1.NamespaceSpec, status: #/definitions/io.k8s.api.core.v1.NamespaceStatus)
  NetworkPolicy: 4 properties (apiVersion: STRING, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, spec: #/definitions/io.k8s.api.networking.v1.NetworkPolicySpec)
  Node: 5 properties (apiVersion: STRING, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, spec: #/definitions/io.k8s.api.core.v1.NodeSpec, status: #/definitions/io.k8s.api.core.v1.NodeStatus)
  PersistentVolume: 5 properties (apiVersion: STRING, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, spec: #/definitions/io.k8s.api.core.v1.PersistentVolumeSpec, status: #/definitions/io.k8s.api.core.v1.PersistentVolumeStatus)
  Pod: 5 properties (apiVersion: STRING, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, spec: #/definitions/io.k8s.api.core.v1.PodSpec, status: #/definitions/io.k8s.api.core.v1.PodStatus)
  Provisioner: 2 properties (metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, name: STRING)
  ReplicaSet: 5 properties (apiVersion: STRING, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, spec: #/definitions/io.k8s.api.apps.v1.ReplicaSetSpec, status: #/definitions/io.k8s.api.apps.v1.ReplicaSetStatus)
  Service: 5 properties (apiVersion: STRING, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, spec: #/definitions/io.k8s.api.core.v1.ServiceSpec, status: #/definitions/io.k8s.api.core.v1.ServiceStatus)
  ServiceAccount: 6 properties (apiVersion: STRING, automountServiceAccountToken: BOOLEAN, imagePullSecrets: [#/definitions/io.k8s.api.core.v1.LocalObjectReference], kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, secrets: [#/definitions/io.k8s.api.core.v1.ObjectReference])
  StatefulSet: 5 properties (apiVersion: STRING, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, spec: #/definitions/io.k8s.api.apps.v1.StatefulSetSpec, status: #/definitions/io.k8s.api.apps.v1.StatefulSetStatus)
  StorageClass: 10 properties (allowVolumeExpansion: BOOLEAN, allowedTopologies: [#/definitions/io.k8s.api.core.v1.TopologySelectorTerm], apiVersion: STRING, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, mountOptions: [STRING], parameters: MAP, provisioner: STRING, reclaimPolicy: STRING, volumeBindingMode: STRING)
Referenced types (used via `#/definitions/`):
  io.k8s.api.apps.v1.DaemonSetCondition: 5 properties (lastTransitionTime: DATETIME_UTC, message: STRING, reason: STRING, status: STRING, type: STRING)
  io.k8s.api.apps.v1.DaemonSetSpec: 5 properties (minReadySeconds: INTEGER, revisionHistoryLimit: INTEGER, selector: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector, template: #/definitions/io.k8s.api.core.v1.PodTemplateSpec, updateStrategy: #/definitions/io.k8s.api.apps.v1.DaemonSetUpdateStrategy)
  io.k8s.api.apps.v1.DaemonSetStatus: 10 properties (collisionCount: INTEGER, conditions: [#/definitions/io.k8s.api.apps.v1.DaemonSetCondition], currentNumberScheduled: INTEGER, desiredNumberScheduled: INTEGER, numberAvailable: INTEGER, numberMisscheduled: INTEGER, numberReady: INTEGER, numberUnavailable: INTEGER, observedGeneration: INTEGER, updatedNumberScheduled: INTEGER)
  io.k8s.api.apps.v1.DaemonSetUpdateStrategy: 2 properties (rollingUpdate: #/definitions/io.k8s.api.apps.v1.RollingUpdateDaemonSet, type: STRING)
  io.k8s.api.apps.v1.DeploymentCondition: 6 properties (lastTransitionTime: DATETIME_UTC, lastUpdateTime: DATETIME_UTC, message: STRING, reason: STRING, status: STRING, type: STRING)
  io.k8s.api.apps.v1.DeploymentSpec: 8 properties (minReadySeconds: INTEGER, paused: BOOLEAN, progressDeadlineSeconds: INTEGER, replicas: INTEGER, revisionHistoryLimit: INTEGER, selector: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector, strategy: #/definitions/io.k8s.api.apps.v1.DeploymentStrategy, template: #/definitions/io.k8s.api.core.v1.PodTemplateSpec)
  io.k8s.api.apps.v1.DeploymentStatus: 8 properties (availableReplicas: INTEGER, collisionCount: INTEGER, conditions: [#/definitions/io.k8s.api.apps.v1.DeploymentCondition], observedGeneration: INTEGER, readyReplicas: INTEGER, replicas: INTEGER, unavailableReplicas: INTEGER, updatedReplicas: INTEGER)
  io.k8s.api.apps.v1.DeploymentStrategy: 2 properties (rollingUpdate: #/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment, type: STRING)
  io.k8s.api.apps.v1.ReplicaSetCondition: 5 properties (lastTransitionTime: DATETIME_UTC, message: STRING, reason: STRING, status: STRING, type: STRING)
  io.k8s.api.apps.v1.ReplicaSetSpec: 4 properties (minReadySeconds: INTEGER, replicas: INTEGER, selector: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector, template: #/definitions/io.k8s.api.core.v1.PodTemplateSpec)
  io.k8s.api.apps.v1.ReplicaSetStatus: 6 properties (availableReplicas: INTEGER, conditions: [#/definitions/io.k8s.api.apps.v1.ReplicaSetCondition], fullyLabeledReplicas: INTEGER, observedGeneration: INTEGER, readyReplicas: INTEGER, replicas: INTEGER)
  io.k8s.api.apps.v1.RollingUpdateDaemonSet: 2 properties (maxSurge: #/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString, maxUnavailable: #/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString)
  io.k8s.api.apps.v1.RollingUpdateDeployment: 2 properties (maxSurge: #/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString, maxUnavailable: #/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString)
  io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy: 2 properties (maxUnavailable: #/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString, partition: INTEGER)
  io.k8s.api.apps.v1.StatefulSetCondition: 5 properties (lastTransitionTime: DATETIME_UTC, message: STRING, reason: STRING, status: STRING, type: STRING)
  io.k8s.api.apps.v1.StatefulSetOrdinals: 1 property (start: INTEGER)
  io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy: 2 properties (whenDeleted: STRING, whenScaled: STRING)
  io.k8s.api.apps.v1.StatefulSetSpec: 11 properties (minReadySeconds: INTEGER, ordinals: #/definitions/io.k8s.api.apps.v1.StatefulSetOrdinals, persistentVolumeClaimRetentionPolicy: #/definitions/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy, podManagementPolicy: STRING, replicas: INTEGER, revisionHistoryLimit: INTEGER, selector: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector, serviceName: STRING, template: #/definitions/io.k8s.api.core.v1.PodTemplateSpec, updateStrategy: #/definitions/io.k8s.api.apps.v1.StatefulSetUpdateStrategy, volumeClaimTemplates: [#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim])
  io.k8s.api.apps.v1.StatefulSetStatus: 10 properties (availableReplicas: INTEGER, collisionCount: INTEGER, conditions: [#/definitions/io.k8s.api.apps.v1.StatefulSetCondition], currentReplicas: INTEGER, currentRevision: STRING, observedGeneration: INTEGER, readyReplicas: INTEGER, replicas: INTEGER, updateRevision: STRING, updatedReplicas: INTEGER)
  io.k8s.api.apps.v1.StatefulSetUpdateStrategy: 2 properties (rollingUpdate: #/definitions/io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy, type: STRING)
  io.k8s.api.batch.v1.JobCondition: 6 properties (lastProbeTime: DATETIME_UTC, lastTransitionTime: DATETIME_UTC, message: STRING, reason: STRING, status: STRING, type: STRING)
  io.k8s.api.batch.v1.JobSpec: 16 properties (activeDeadlineSeconds: INTEGER, backoffLimit: INTEGER, backoffLimitPerIndex: INTEGER, completionMode: STRING, completions: INTEGER, managedBy: STRING, manualSelector: BOOLEAN, maxFailedIndexes: INTEGER, parallelism: INTEGER, podFailurePolicy: #/definitions/io.k8s.api.batch.v1.PodFailurePolicy, podReplacementPolicy: STRING, selector: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector, successPolicy: #/definitions/io.k8s.api.batch.v1.SuccessPolicy, suspend: BOOLEAN, template: #/definitions/io.k8s.api.core.v1.PodTemplateSpec, ttlSecondsAfterFinished: INTEGER)
  io.k8s.api.batch.v1.JobStatus: 11 properties (active: INTEGER, completedIndexes: STRING, completionTime: DATETIME_UTC, conditions: [#/definitions/io.k8s.api.batch.v1.JobCondition], failed: INTEGER, failedIndexes: STRING, ready: INTEGER, startTime: DATETIME_UTC, succeeded: INTEGER, terminating: INTEGER, uncountedTerminatedPods: #/definitions/io.k8s.api.batch.v1.UncountedTerminatedPods)
  io.k8s.api.batch.v1.PodFailurePolicy: 1 property (rules: [#/definitions/io.k8s.api.batch.v1.PodFailurePolicyRule])
  io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement: 3 properties (containerName: STRING, operator: STRING, values: [INTEGER])
  io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern: 2 properties (status: STRING, type: STRING)
  io.k8s.api.batch.v1.PodFailurePolicyRule: 3 properties (action: STRING, onExitCodes: #/definitions/io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement, onPodConditions: [#/definitions/io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern])
  io.k8s.api.batch.v1.SuccessPolicy: 1 property (rules: [#/definitions/io.k8s.api.batch.v1.SuccessPolicyRule])
  io.k8s.api.batch.v1.SuccessPolicyRule: 2 properties (succeededCount: INTEGER, succeededIndexes: STRING)
  io.k8s.api.batch.v1.UncountedTerminatedPods: 2 properties (failed: [STRING], succeeded: [STRING])
  io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource: 4 properties (fsType: STRING, partition: INTEGER, readOnly: BOOLEAN, volumeID: STRING)
  io.k8s.api.core.v1.Affinity: 3 properties (nodeAffinity: #/definitions/io.k8s.api.core.v1.NodeAffinity, podAffinity: #/definitions/io.k8s.api.core.v1.PodAffinity, podAntiAffinity: #/definitions/io.k8s.api.core.v1.PodAntiAffinity)
  io.k8s.api.core.v1.AppArmorProfile: 2 properties (localhostProfile: STRING, type: STRING)
  io.k8s.api.core.v1.AttachedVolume: 2 properties (devicePath: STRING, name: STRING)
  io.k8s.api.core.v1.AzureDiskVolumeSource: 6 properties (cachingMode: STRING, diskName: STRING, diskURI: STRING, fsType: STRING, kind: STRING, readOnly: BOOLEAN)
  io.k8s.api.core.v1.AzureFilePersistentVolumeSource: 4 properties (readOnly: BOOLEAN, secretName: STRING, secretNamespace: STRING, shareName: STRING)
  io.k8s.api.core.v1.AzureFileVolumeSource: 3 properties (readOnly: BOOLEAN, secretName: STRING, shareName: STRING)
  io.k8s.api.core.v1.CSIPersistentVolumeSource: 10 properties (controllerExpandSecretRef: #/definitions/io.k8s.api.core.v1.SecretReference, controllerPublishSecretRef: #/definitions/io.k8s.api.core.v1.SecretReference, driver: STRING, fsType: STRING, nodeExpandSecretRef: #/definitions/io.k8s.api.core.v1.SecretReference, nodePublishSecretRef: #/definitions/io.k8s.api.core.v1.SecretReference, nodeStageSecretRef: #/definitions/io.k8s.api.core.v1.SecretReference, readOnly: BOOLEAN, volumeAttributes: MAP, volumeHandle: STRING)
  io.k8s.api.core.v1.CSIVolumeSource: 5 properties (driver: STRING, fsType: STRING, nodePublishSecretRef: #/definitions/io.k8s.api.core.v1.LocalObjectReference, readOnly: BOOLEAN, volumeAttributes: MAP)
  io.k8s.api.core.v1.Capabilities: 2 properties (add: [STRING], drop: [STRING])
  io.k8s.api.core.v1.CephFSPersistentVolumeSource: 6 properties (monitors: [STRING], path: STRING, readOnly: BOOLEAN, secretFile: STRING, secretRef: #/definitions/io.k8s.api.core.v1.SecretReference, user: STRING)
  io.k8s.api.core.v1.CephFSVolumeSource: 6 properties (monitors: [STRING], path: STRING, readOnly: BOOLEAN, secretFile: STRING, secretRef: #/definitions/io.k8s.api.core.v1.LocalObjectReference, user: STRING)
  io.k8s.api.core.v1.CinderPersistentVolumeSource: 4 properties (fsType: STRING, readOnly: BOOLEAN, secretRef: #/definitions/io.k8s.api.core.v1.SecretReference, volumeID: STRING)
  io.k8s.api.core.v1.CinderVolumeSource: 4 properties (fsType: STRING, readOnly: BOOLEAN, secretRef: #/definitions/io.k8s.api.core.v1.LocalObjectReference, volumeID: STRING)
  io.k8s.api.core.v1.ClientIPConfig: 1 property (timeoutSeconds: INTEGER)
  io.k8s.api.core.v1.ClusterTrustBundleProjection: 5 properties (labelSelector: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector, name: STRING, optional: BOOLEAN, path: STRING, signerName: STRING)
  io.k8s.api.core.v1.ConfigMapEnvSource: 2 properties (name: STRING, optional: BOOLEAN)
  io.k8s.api.core.v1.ConfigMapKeySelector: 3 properties (key: STRING, name: STRING, optional: BOOLEAN)
  io.k8s.api.core.v1.ConfigMapNodeConfigSource: 5 properties (kubeletConfigKey: STRING, name: STRING, namespace: STRING, resourceVersion: STRING, uid: STRING)
  io.k8s.api.core.v1.ConfigMapProjection: 3 properties (items: [#/definitions/io.k8s.api.core.v1.KeyToPath], name: STRING, optional: BOOLEAN)
  io.k8s.api.core.v1.ConfigMapVolumeSource: 4 properties (defaultMode: INTEGER, items: [#/definitions/io.k8s.api.core.v1.KeyToPath], name: STRING, optional: BOOLEAN)
  io.k8s.api.core.v1.Container: 24 properties (args: [STRING], command: [STRING], env: [#/definitions/io.k8s.api.core.v1.EnvVar], envFrom: [#/definitions/io.k8s.api.core.v1.EnvFromSource], image: STRING, imagePullPolicy: STRING, lifecycle: #/definitions/io.k8s.api.core.v1.Lifecycle, livenessProbe: #/definitions/io.k8s.api.core.v1.Probe, name: STRING, ports: [#/definitions/io.k8s.api.core.v1.ContainerPort], readinessProbe: #/definitions/io.k8s.api.core.v1.Probe, resizePolicy: [#/definitions/io.k8s.api.core.v1.ContainerResizePolicy], resources: #/definitions/io.k8s.api.core.v1.ResourceRequirements, restartPolicy: STRING, securityContext: #/definitions/io.k8s.api.core.v1.SecurityContext, startupProbe: #/definitions/io.k8s.api.core.v1.Probe, stdin: BOOLEAN, stdinOnce: BOOLEAN, terminationMessagePath: STRING, terminationMessagePolicy: STRING, tty: BOOLEAN, volumeDevices: [#/definitions/io.k8s.api.core.v1.VolumeDevice], volumeMounts: [#/definitions/io.k8s.api.core.v1.VolumeMount], workingDir: STRING)
  io.k8s.api.core.v1.ContainerImage: 2 properties (names: [STRING], sizeBytes: INTEGER)
  io.k8s.api.core.v1.ContainerPort: 5 properties (containerPort: INTEGER, hostIP: STRING, hostPort: INTEGER, name: STRING, protocol: STRING)
  io.k8s.api.core.v1.ContainerResizePolicy: 2 properties (resourceName: STRING, restartPolicy: STRING)
  io.k8s.api.core.v1.ContainerState: 3 properties (running: #/definitions/io.k8s.api.core.v1.ContainerStateRunning, terminated: #/definitions/io.k8s.api.core.v1.ContainerStateTerminated, waiting: #/definitions/io.k8s.api.core.v1.ContainerStateWaiting)
  io.k8s.api.core.v1.ContainerStateRunning: 1 property (startedAt: DATETIME_UTC)
  io.k8s.api.core.v1.ContainerStateTerminated: 7 properties (containerID: STRING, exitCode: INTEGER, finishedAt: DATETIME_UTC, message: STRING, reason: STRING, signal: INTEGER, startedAt: DATETIME_UTC)
  io.k8s.api.core.v1.ContainerStateWaiting: 2 properties (message: STRING, reason: STRING)
  io.k8s.api.core.v1.ContainerStatus: 14 properties (allocatedResources: MAP, allocatedResourcesStatus: [#/definitions/io.k8s.api.core.v1.ResourceStatus], containerID: STRING, image: STRING, imageID: STRING, lastState: #/definitions/io.k8s.api.core.v1.ContainerState, name: STRING, ready: BOOLEAN, resources: #/definitions/io.k8s.api.core.v1.ResourceRequirements, restartCount: INTEGER, started: BOOLEAN, state: #/definitions/io.k8s.api.core.v1.ContainerState, user: #/definitions/io.k8s.api.core.v1.ContainerUser, volumeMounts: [#/definitions/io.k8s.api.core.v1.VolumeMountStatus])
  io.k8s.api.core.v1.ContainerUser: 1 property (linux: #/definitions/io.k8s.api.core.v1.LinuxContainerUser)
  io.k8s.api.core.v1.DaemonEndpoint: 1 property (Port: INTEGER)
  io.k8s.api.core.v1.DownwardAPIProjection: 1 property (items: [#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile])
  io.k8s.api.core.v1.DownwardAPIVolumeFile: 4 properties (fieldRef: #/definitions/io.k8s.api.core.v1.ObjectFieldSelector, mode: INTEGER, path: STRING, resourceFieldRef: #/definitions/io.k8s.api.core.v1.ResourceFieldSelector)
  io.k8s.api.core.v1.DownwardAPIVolumeSource: 2 properties (defaultMode: INTEGER, items: [#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile])
  io.k8s.api.core.v1.EmptyDirVolumeSource: 2 properties (medium: STRING, sizeLimit: #/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity)
  io.k8s.api.core.v1.EndpointAddress: 4 properties (hostname: STRING, ip: STRING, nodeName: STRING, targetRef: #/definitions/io.k8s.api.core.v1.ObjectReference)
  io.k8s.api.core.v1.EndpointPort: 4 properties (appProtocol: STRING, name: STRING, port: INTEGER, protocol: STRING)
  io.k8s.api.core.v1.EndpointSubset: 3 properties (addresses: [#/definitions/io.k8s.api.core.v1.EndpointAddress], notReadyAddresses: [#/definitions/io.k8s.api.core.v1.EndpointAddress], ports: [#/definitions/io.k8s.api.core.v1.EndpointPort])
  io.k8s.api.core.v1.EnvFromSource: 3 properties (configMapRef: #/definitions/io.k8s.api.core.v1.ConfigMapEnvSource, prefix: STRING, secretRef: #/definitions/io.k8s.api.core.v1.SecretEnvSource)
  io.k8s.api.core.v1.EnvVar: 3 properties (name: STRING, value: STRING, valueFrom: #/definitions/io.k8s.api.core.v1.EnvVarSource)
  io.k8s.api.core.v1.EnvVarSource: 4 properties (configMapKeyRef: #/definitions/io.k8s.api.core.v1.ConfigMapKeySelector, fieldRef: #/definitions/io.k8s.api.core.v1.ObjectFieldSelector, resourceFieldRef: #/definitions/io.k8s.api.core.v1.ResourceFieldSelector, secretKeyRef: #/definitions/io.k8s.api.core.v1.SecretKeySelector)
  io.k8s.api.core.v1.EphemeralContainer: 25 properties (args: [STRING], command: [STRING], env: [#/definitions/io.k8s.api.core.v1.EnvVar], envFrom: [#/definitions/io.k8s.api.core.v1.EnvFromSource], image: STRING, imagePullPolicy: STRING, lifecycle: #/definitions/io.k8s.api.core.v1.Lifecycle, livenessProbe: #/definitions/io.k8s.api.core.v1.Probe, name: STRING, ports: [#/definitions/io.k8s.api.core.v1.ContainerPort], readinessProbe: #/definitions/io.k8s.api.core.v1.Probe, resizePolicy: [#/definitions/io.k8s.api.core.v1.ContainerResizePolicy], resources: #/definitions/io.k8s.api.core.v1.ResourceRequirements, restartPolicy: STRING, securityContext: #/definitions/io.k8s.api.core.v1.SecurityContext, startupProbe: #/definitions/io.k8s.api.core.v1.Probe, stdin: BOOLEAN, stdinOnce: BOOLEAN, targetContainerName: STRING, terminationMessagePath: STRING, terminationMessagePolicy: STRING, tty: BOOLEAN, volumeDevices: [#/definitions/io.k8s.api.core.v1.VolumeDevice], volumeMounts: [#/definitions/io.k8s.api.core.v1.VolumeMount], workingDir: STRING)
  io.k8s.api.core.v1.EphemeralVolumeSource: 1 property (volumeClaimTemplate: #/definitions/io.k8s.api.core.v1.PersistentVolumeClaimTemplate)
  io.k8s.api.core.v1.ExecAction: 1 property (command: [STRING])
  io.k8s.api.core.v1.FCVolumeSource: 5 properties (fsType: STRING, lun: INTEGER, readOnly: BOOLEAN, targetWWNs: [STRING], wwids: [STRING])
  io.k8s.api.core.v1.FlexPersistentVolumeSource: 5 properties (driver: STRING, fsType: STRING, options: MAP, readOnly: BOOLEAN, secretRef: #/definitions/io.k8s.api.core.v1.SecretReference)
  io.k8s.api.core.v1.FlexVolumeSource: 5 properties (driver: STRING, fsType: STRING, options: MAP, readOnly: BOOLEAN, secretRef: #/definitions/io.k8s.api.core.v1.LocalObjectReference)
  io.k8s.api.core.v1.FlockerVolumeSource: 2 properties (datasetName: STRING, datasetUUID: STRING)
  io.k8s.api.core.v1.GCEPersistentDiskVolumeSource: 4 properties (fsType: STRING, partition: INTEGER, pdName: STRING, readOnly: BOOLEAN)
  io.k8s.api.core.v1.GRPCAction: 2 properties (port: INTEGER, service: STRING)
  io.k8s.api.core.v1.GitRepoVolumeSource: 3 properties (directory: STRING, repository: STRING, revision: STRING)
  io.k8s.api.core.v1.GlusterfsPersistentVolumeSource: 4 properties (endpoints: STRING, endpointsNamespace: STRING, path: STRING, readOnly: BOOLEAN)
  io.k8s.api.core.v1.GlusterfsVolumeSource: 3 properties (endpoints: STRING, path: STRING, readOnly: BOOLEAN)
  io.k8s.api.core.v1.HTTPGetAction: 5 properties (host: STRING, httpHeaders: [#/definitions/io.k8s.api.core.v1.HTTPHeader], path: STRING, port: #/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString, scheme: STRING)
  io.k8s.api.core.v1.HTTPHeader: 2 properties (name: STRING, value: STRING)
  io.k8s.api.core.v1.HostAlias: 2 properties (hostnames: [STRING], ip: STRING)
  io.k8s.api.core.v1.HostIP: 1 property (ip: STRING)
  io.k8s.api.core.v1.HostPathVolumeSource: 2 properties (path: STRING, type: STRING)
  io.k8s.api.core.v1.ISCSIPersistentVolumeSource: 11 properties (chapAuthDiscovery: BOOLEAN, chapAuthSession: BOOLEAN, fsType: STRING, initiatorName: STRING, iqn: STRING, iscsiInterface: STRING, lun: INTEGER, portals: [STRING], readOnly: BOOLEAN, secretRef: #/definitions/io.k8s.api.core.v1.SecretReference, targetPortal: STRING)
  io.k8s.api.core.v1.ISCSIVolumeSource: 11 properties (chapAuthDiscovery: BOOLEAN, chapAuthSession: BOOLEAN, fsType: STRING, initiatorName: STRING, iqn: STRING, iscsiInterface: STRING, lun: INTEGER, portals: [STRING], readOnly: BOOLEAN, secretRef: #/definitions/io.k8s.api.core.v1.LocalObjectReference, targetPortal: STRING)
  io.k8s.api.core.v1.ImageVolumeSource: 2 properties (pullPolicy: STRING, reference: STRING)
  io.k8s.api.core.v1.KeyToPath: 3 properties (key: STRING, mode: INTEGER, path: STRING)
  io.k8s.api.core.v1.Lifecycle: 2 properties (postStart: #/definitions/io.k8s.api.core.v1.LifecycleHandler, preStop: #/definitions/io.k8s.api.core.v1.LifecycleHandler)
  io.k8s.api.core.v1.LifecycleHandler: 4 properties (exec: #/definitions/io.k8s.api.core.v1.ExecAction, httpGet: #/definitions/io.k8s.api.core.v1.HTTPGetAction, sleep: #/definitions/io.k8s.api.core.v1.SleepAction, tcpSocket: #/definitions/io.k8s.api.core.v1.TCPSocketAction)
  io.k8s.api.core.v1.LinuxContainerUser: 3 properties (gid: INTEGER, supplementalGroups: [INTEGER], uid: INTEGER)
  io.k8s.api.core.v1.LoadBalancerIngress: 4 properties (hostname: STRING, ip: STRING, ipMode: STRING, ports: [#/definitions/io.k8s.api.core.v1.PortStatus])
  io.k8s.api.core.v1.LoadBalancerStatus: 1 property (ingress: [#/definitions/io.k8s.api.core.v1.LoadBalancerIngress])
  io.k8s.api.core.v1.LocalObjectReference: 1 property (name: STRING)
  io.k8s.api.core.v1.LocalVolumeSource: 2 properties (fsType: STRING, path: STRING)
  io.k8s.api.core.v1.ModifyVolumeStatus: 2 properties (status: STRING, targetVolumeAttributesClassName: STRING)
  io.k8s.api.core.v1.NFSVolumeSource: 3 properties (path: STRING, readOnly: BOOLEAN, server: STRING)
  io.k8s.api.core.v1.NamespaceCondition: 5 properties (lastTransitionTime: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time, message: STRING, reason: STRING, status: STRING, type: STRING)
  io.k8s.api.core.v1.NamespaceSpec: 1 property (finalizers: [STRING])
  io.k8s.api.core.v1.NamespaceStatus: 2 properties (conditions: [#/definitions/io.k8s.api.core.v1.NamespaceCondition], phase: STRING)
  io.k8s.api.core.v1.NodeAddress: 2 properties (address: STRING, type: STRING)
  io.k8s.api.core.v1.NodeAffinity: 2 properties (preferredDuringSchedulingIgnoredDuringExecution: [#/definitions/io.k8s.api.core.v1.PreferredSchedulingTerm], requiredDuringSchedulingIgnoredDuringExecution: #/definitions/io.k8s.api.core.v1.NodeSelector)
  io.k8s.api.core.v1.NodeCondition: 6 properties (lastHeartbeatTime: DATETIME_UTC, lastTransitionTime: DATETIME_UTC, message: STRING, reason: STRING, status: STRING, type: STRING)
  io.k8s.api.core.v1.NodeConfigSource: 1 property (configMap: #/definitions/io.k8s.api.core.v1.ConfigMapNodeConfigSource)
  io.k8s.api.core.v1.NodeConfigStatus: 4 properties (active: #/definitions/io.k8s.api.core.v1.NodeConfigSource, assigned: #/definitions/io.k8s.api.core.v1.NodeConfigSource, error: STRING, lastKnownGood: #/definitions/io.k8s.api.core.v1.NodeConfigSource)
  io.k8s.api.core.v1.NodeDaemonEndpoints: 1 property (kubeletEndpoint: #/definitions/io.k8s.api.core.v1.DaemonEndpoint)
  io.k8s.api.core.v1.NodeFeatures: 1 property (supplementalGroupsPolicy: BOOLEAN)
  io.k8s.api.core.v1.NodeRuntimeHandler: 2 properties (features: #/definitions/io.k8s.api.core.v1.NodeRuntimeHandlerFeatures, name: STRING)
  io.k8s.api.core.v1.NodeRuntimeHandlerFeatures: 2 properties (recursiveReadOnlyMounts: BOOLEAN, userNamespaces: BOOLEAN)
  io.k8s.api.core.v1.NodeSelector: 1 property (nodeSelectorTerms: [#/definitions/io.k8s.api.core.v1.NodeSelectorTerm])
  io.k8s.api.core.v1.NodeSelectorRequirement: 3 properties (key: STRING, operator: STRING, values: [STRING])
  io.k8s.api.core.v1.NodeSelectorTerm: 2 properties (matchExpressions: [#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement], matchFields: [#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement])
  io.k8s.api.core.v1.NodeSpec: 7 properties (configSource: #/definitions/io.k8s.api.core.v1.NodeConfigSource, externalID: STRING, podCIDR: STRING, podCIDRs: [STRING], providerID: STRING, taints: [#/definitions/io.k8s.api.core.v1.Taint], unschedulable: BOOLEAN)
  io.k8s.api.core.v1.NodeStatus: 13 properties (addresses: [#/definitions/io.k8s.api.core.v1.NodeAddress], allocatable: MAP, capacity: MAP, conditions: [#/definitions/io.k8s.api.core.v1.NodeCondition], config: #/definitions/io.k8s.api.core.v1.NodeConfigStatus, daemonEndpoints: #/definitions/io.k8s.api.core.v1.NodeDaemonEndpoints, features: #/definitions/io.k8s.api.core.v1.NodeFeatures, images: [#/definitions/io.k8s.api.core.v1.ContainerImage], nodeInfo: #/definitions/io.k8s.api.core.v1.NodeSystemInfo, phase: STRING, runtimeHandlers: [#/definitions/io.k8s.api.core.v1.NodeRuntimeHandler], volumesAttached: [#/definitions/io.k8s.api.core.v1.AttachedVolume], volumesInUse: [STRING])
  io.k8s.api.core.v1.NodeSystemInfo: 10 properties (architecture: STRING, bootID: STRING, containerRuntimeVersion: STRING, kernelVersion: STRING, kubeProxyVersion: STRING, kubeletVersion: STRING, machineID: STRING, operatingSystem: STRING, osImage: STRING, systemUUID: STRING)
  io.k8s.api.core.v1.ObjectFieldSelector: 2 properties (apiVersion: STRING, fieldPath: STRING)
  io.k8s.api.core.v1.ObjectReference: 7 properties (apiVersion: STRING, fieldPath: STRING, kind: STRING, name: STRING, namespace: STRING, resourceVersion: STRING, uid: STRING)
  io.k8s.api.core.v1.PersistentVolumeClaim: 5 properties (apiVersion: STRING, kind: STRING, metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, spec: #/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec, status: #/definitions/io.k8s.api.core.v1.PersistentVolumeClaimStatus)
  io.k8s.api.core.v1.PersistentVolumeClaimCondition: 6 properties (lastProbeTime: DATETIME_UTC, lastTransitionTime: DATETIME_UTC, message: STRING, reason: STRING, status: STRING, type: STRING)
  io.k8s.api.core.v1.PersistentVolumeClaimSpec: 9 properties (accessModes: [STRING], dataSource: #/definitions/io.k8s.api.core.v1.TypedLocalObjectReference, dataSourceRef: #/definitions/io.k8s.api.core.v1.TypedObjectReference, resources: #/definitions/io.k8s.api.core.v1.VolumeResourceRequirements, selector: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector, storageClassName: STRING, volumeAttributesClassName: STRING, volumeMode: STRING, volumeName: STRING)
  io.k8s.api.core.v1.PersistentVolumeClaimStatus: 8 properties (accessModes: [STRING], allocatedResourceStatuses: MAP, allocatedResources: MAP, capacity: MAP, conditions: [#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimCondition], currentVolumeAttributesClassName: STRING, modifyVolumeStatus: #/definitions/io.k8s.api.core.v1.ModifyVolumeStatus, phase: STRING)
  io.k8s.api.core.v1.PersistentVolumeClaimTemplate: 2 properties (metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, spec: #/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec)
  io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource: 2 properties (claimName: STRING, readOnly: BOOLEAN)
  io.k8s.api.core.v1.PersistentVolumeSpec: 31 properties (accessModes: [STRING], awsElasticBlockStore: #/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource, azureDisk: #/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource, azureFile: #/definitions/io.k8s.api.core.v1.AzureFilePersistentVolumeSource, capacity: MAP, cephfs: #/definitions/io.k8s.api.core.v1.CephFSPersistentVolumeSource, cinder: #/definitions/io.k8s.api.core.v1.CinderPersistentVolumeSource, claimRef: #/definitions/io.k8s.api.core.v1.ObjectReference, csi: #/definitions/io.k8s.api.core.v1.CSIPersistentVolumeSource, fc: #/definitions/io.k8s.api.core.v1.FCVolumeSource, flexVolume: #/definitions/io.k8s.api.core.v1.FlexPersistentVolumeSource, flocker: #/definitions/io.k8s.api.core.v1.FlockerVolumeSource, gcePersistentDisk: #/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource, glusterfs: #/definitions/io.k8s.api.core.v1.GlusterfsPersistentVolumeSource, hostPath: #/definitions/io.k8s.api.core.v1.HostPathVolumeSource, iscsi: #/definitions/io.k8s.api.core.v1.ISCSIPersistentVolumeSource, local: #/definitions/io.k8s.api.core.v1.LocalVolumeSource, mountOptions: [STRING], nfs: #/definitions/io.k8s.api.core.v1.NFSVolumeSource, nodeAffinity: #/definitions/io.k8s.api.core.v1.VolumeNodeAffinity, persistentVolumeReclaimPolicy: STRING, photonPersistentDisk: #/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource, portworxVolume: #/definitions/io.k8s.api.core.v1.PortworxVolumeSource, quobyte: #/definitions/io.k8s.api.core.v1.QuobyteVolumeSource, rbd: #/definitions/io.k8s.api.core.v1.RBDPersistentVolumeSource, scaleIO: #/definitions/io.k8s.api.core.v1.ScaleIOPersistentVolumeSource, storageClassName: STRING, storageos: #/definitions/io.k8s.api.core.v1.StorageOSPersistentVolumeSource, volumeAttributesClassName: STRING, volumeMode: STRING, vsphereVolume: #/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource)
  io.k8s.api.core.v1.PersistentVolumeStatus: 4 properties (lastPhaseTransitionTime: DATETIME_UTC, message: STRING, phase: STRING, reason: STRING)
  io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource: 2 properties (fsType: STRING, pdID: STRING)
  io.k8s.api.core.v1.PodAffinity: 2 properties (preferredDuringSchedulingIgnoredDuringExecution: [#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm], requiredDuringSchedulingIgnoredDuringExecution: [#/definitions/io.k8s.api.core.v1.PodAffinityTerm])
  io.k8s.api.core.v1.PodAffinityTerm: 6 properties (labelSelector: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector, matchLabelKeys: [STRING], mismatchLabelKeys: [STRING], namespaceSelector: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector, namespaces: [STRING], topologyKey: STRING)
  io.k8s.api.core.v1.PodAntiAffinity: 2 properties (preferredDuringSchedulingIgnoredDuringExecution: [#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm], requiredDuringSchedulingIgnoredDuringExecution: [#/definitions/io.k8s.api.core.v1.PodAffinityTerm])
  io.k8s.api.core.v1.PodCondition: 6 properties (lastProbeTime: DATETIME_UTC, lastTransitionTime: DATETIME_UTC, message: STRING, reason: STRING, status: STRING, type: STRING)
  io.k8s.api.core.v1.PodDNSConfig: 3 properties (nameservers: [STRING], options: [#/definitions/io.k8s.api.core.v1.PodDNSConfigOption], searches: [STRING])
  io.k8s.api.core.v1.PodDNSConfigOption: 2 properties (name: STRING, value: STRING)
  io.k8s.api.core.v1.PodIP: 1 property (ip: STRING)
  io.k8s.api.core.v1.PodOS: 1 property (name: STRING)
  io.k8s.api.core.v1.PodReadinessGate: 1 property (conditionType: STRING)
  io.k8s.api.core.v1.PodResourceClaim: 3 properties (name: STRING, resourceClaimName: STRING, resourceClaimTemplateName: STRING)
  io.k8s.api.core.v1.PodResourceClaimStatus: 2 properties (name: STRING, resourceClaimName: STRING)
  io.k8s.api.core.v1.PodSchedulingGate: 1 property (name: STRING)
  io.k8s.api.core.v1.PodSecurityContext: 12 properties (appArmorProfile: #/definitions/io.k8s.api.core.v1.AppArmorProfile, fsGroup: INTEGER, fsGroupChangePolicy: STRING, runAsGroup: INTEGER, runAsNonRoot: BOOLEAN, runAsUser: INTEGER, seLinuxOptions: #/definitions/io.k8s.api.core.v1.SELinuxOptions, seccompProfile: #/definitions/io.k8s.api.core.v1.SeccompProfile, supplementalGroups: [INTEGER], supplementalGroupsPolicy: STRING, sysctls: [#/definitions/io.k8s.api.core.v1.Sysctl], windowsOptions: #/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions)
  io.k8s.api.core.v1.PodSpec: 39 properties (activeDeadlineSeconds: INTEGER, affinity: #/definitions/io.k8s.api.core.v1.Affinity, automountServiceAccountToken: BOOLEAN, containers: [#/definitions/io.k8s.api.core.v1.Container], dnsConfig: #/definitions/io.k8s.api.core.v1.PodDNSConfig, dnsPolicy: STRING, enableServiceLinks: BOOLEAN, ephemeralContainers: [#/definitions/io.k8s.api.core.v1.EphemeralContainer], hostAliases: [#/definitions/io.k8s.api.core.v1.HostAlias], hostIPC: BOOLEAN, hostNetwork: BOOLEAN, hostPID: BOOLEAN, hostUsers: BOOLEAN, hostname: STRING, imagePullSecrets: [#/definitions/io.k8s.api.core.v1.LocalObjectReference], initContainers: [#/definitions/io.k8s.api.core.v1.Container], nodeName: STRING, nodeSelector: MAP, os: #/definitions/io.k8s.api.core.v1.PodOS, overhead: MAP, preemptionPolicy: STRING, priority: INTEGER, priorityClassName: STRING, readinessGates: [#/definitions/io.k8s.api.core.v1.PodReadinessGate], resourceClaims: [#/definitions/io.k8s.api.core.v1.PodResourceClaim], restartPolicy: STRING, runtimeClassName: STRING, schedulerName: STRING, schedulingGates: [#/definitions/io.k8s.api.core.v1.PodSchedulingGate], securityContext: #/definitions/io.k8s.api.core.v1.PodSecurityContext, serviceAccount: STRING, serviceAccountName: STRING, setHostnameAsFQDN: BOOLEAN, shareProcessNamespace: BOOLEAN, subdomain: STRING, terminationGracePeriodSeconds: INTEGER, tolerations: [#/definitions/io.k8s.api.core.v1.Toleration], topologySpreadConstraints: [#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint], volumes: [#/definitions/io.k8s.api.core.v1.Volume])
  io.k8s.api.core.v1.PodStatus: 16 properties (conditions: [#/definitions/io.k8s.api.core.v1.PodCondition], containerStatuses: [#/definitions/io.k8s.api.core.v1.ContainerStatus], ephemeralContainerStatuses: [#/definitions/io.k8s.api.core.v1.ContainerStatus], hostIP: STRING, hostIPs: [#/definitions/io.k8s.api.core.v1.HostIP], initContainerStatuses: [#/definitions/io.k8s.api.core.v1.ContainerStatus], message: STRING, nominatedNodeName: STRING, phase: STRING, podIP: STRING, podIPs: [#/definitions/io.k8s.api.core.v1.PodIP], qosClass: STRING, reason: STRING, resize: STRING, resourceClaimStatuses: [#/definitions/io.k8s.api.core.v1.PodResourceClaimStatus], startTime: DATETIME_UTC)
  io.k8s.api.core.v1.PodTemplateSpec: 2 properties (metadata: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta, spec: #/definitions/io.k8s.api.core.v1.PodSpec)
  io.k8s.api.core.v1.PortStatus: 3 properties (error: STRING, port: INTEGER, protocol: STRING)
  io.k8s.api.core.v1.PortworxVolumeSource: 3 properties (fsType: STRING, readOnly: BOOLEAN, volumeID: STRING)
  io.k8s.api.core.v1.PreferredSchedulingTerm: 2 properties (preference: #/definitions/io.k8s.api.core.v1.NodeSelectorTerm, weight: INTEGER)
  io.k8s.api.core.v1.Probe: 10 properties (exec: #/definitions/io.k8s.api.core.v1.ExecAction, failureThreshold: INTEGER, grpc: #/definitions/io.k8s.api.core.v1.GRPCAction, httpGet: #/definitions/io.k8s.api.core.v1.HTTPGetAction, initialDelaySeconds: INTEGER, periodSeconds: INTEGER, successThreshold: INTEGER, tcpSocket: #/definitions/io.k8s.api.core.v1.TCPSocketAction, terminationGracePeriodSeconds: INTEGER, timeoutSeconds: INTEGER)
  io.k8s.api.core.v1.ProjectedVolumeSource: 2 properties (defaultMode: INTEGER, sources: [#/definitions/io.k8s.api.core.v1.VolumeProjection])
  io.k8s.api.core.v1.QuobyteVolumeSource: 6 properties (group: STRING, readOnly: BOOLEAN, registry: STRING, tenant: STRING, user: STRING, volume: STRING)
  io.k8s.api.core.v1.RBDPersistentVolumeSource: 8 properties (fsType: STRING, image: STRING, keyring: STRING, monitors: [STRING], pool: STRING, readOnly: BOOLEAN, secretRef: #/definitions/io.k8s.api.core.v1.SecretReference, user: STRING)
  io.k8s.api.core.v1.RBDVolumeSource: 8 properties (fsType: STRING, image: STRING, keyring: STRING, monitors: [STRING], pool: STRING, readOnly: BOOLEAN, secretRef: #/definitions/io.k8s.api.core.v1.LocalObjectReference, user: STRING)
  io.k8s.api.core.v1.ResourceClaim: 2 properties (name: STRING, request: STRING)
  io.k8s.api.core.v1.ResourceFieldSelector: 3 properties (containerName: STRING, divisor: #/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity, resource: STRING)
  io.k8s.api.core.v1.ResourceHealth: 2 properties (health: STRING, resourceID: STRING)
  io.k8s.api.core.v1.ResourceRequirements: 3 properties (claims: [#/definitions/io.k8s.api.core.v1.ResourceClaim], limits: MAP, requests: MAP)
  io.k8s.api.core.v1.ResourceStatus: 2 properties (name: STRING, resources: [#/definitions/io.k8s.api.core.v1.ResourceHealth])
  io.k8s.api.core.v1.SELinuxOptions: 4 properties (level: STRING, role: STRING, type: STRING, user: STRING)
  io.k8s.api.core.v1.ScaleIOPersistentVolumeSource: 10 properties (fsType: STRING, gateway: STRING, protectionDomain: STRING, readOnly: BOOLEAN, secretRef: #/definitions/io.k8s.api.core.v1.SecretReference, sslEnabled: BOOLEAN, storageMode: STRING, storagePool: STRING, system: STRING, volumeName: STRING)
  io.k8s.api.core.v1.ScaleIOVolumeSource: 10 properties (fsType: STRING, gateway: STRING, protectionDomain: STRING, readOnly: BOOLEAN, secretRef: #/definitions/io.k8s.api.core.v1.LocalObjectReference, sslEnabled: BOOLEAN, storageMode: STRING, storagePool: STRING, system: STRING, volumeName: STRING)
  io.k8s.api.core.v1.SeccompProfile: 2 properties (localhostProfile: STRING, type: STRING)
  io.k8s.api.core.v1.SecretEnvSource: 2 properties (name: STRING, optional: BOOLEAN)
  io.k8s.api.core.v1.SecretKeySelector: 3 properties (key: STRING, name: STRING, optional: BOOLEAN)
  io.k8s.api.core.v1.SecretProjection: 3 properties (items: [#/definitions/io.k8s.api.core.v1.KeyToPath], name: STRING, optional: BOOLEAN)
  io.k8s.api.core.v1.SecretReference: 2 properties (name: STRING, namespace: STRING)
  io.k8s.api.core.v1.SecretVolumeSource: 4 properties (defaultMode: INTEGER, items: [#/definitions/io.k8s.api.core.v1.KeyToPath], optional: BOOLEAN, secretName: STRING)
  io.k8s.api.core.v1.SecurityContext: 12 properties (allowPrivilegeEscalation: BOOLEAN, appArmorProfile: #/definitions/io.k8s.api.core.v1.AppArmorProfile, capabilities: #/definitions/io.k8s.api.core.v1.Capabilities, privileged: BOOLEAN, procMount: STRING, readOnlyRootFilesystem: BOOLEAN, runAsGroup: INTEGER, runAsNonRoot: BOOLEAN, runAsUser: INTEGER, seLinuxOptions: #/definitions/io.k8s.api.core.v1.SELinuxOptions, seccompProfile: #/definitions/io.k8s.api.core.v1.SeccompProfile, windowsOptions: #/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions)
  io.k8s.api.core.v1.ServiceAccountTokenProjection: 3 properties (audience: STRING, expirationSeconds: INTEGER, path: STRING)
  io.k8s.api.core.v1.ServicePort: 6 properties (appProtocol: STRING, name: STRING, nodePort: INTEGER, port: INTEGER, protocol: STRING, targetPort: #/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString)
  io.k8s.api.core.v1.ServiceSpec: 20 properties (allocateLoadBalancerNodePorts: BOOLEAN, clusterIP: STRING, clusterIPs: [STRING], externalIPs: [STRING], externalName: STRING, externalTrafficPolicy: STRING, healthCheckNodePort: INTEGER, internalTrafficPolicy: STRING, ipFamilies: [STRING], ipFamilyPolicy: STRING, loadBalancerClass: STRING, loadBalancerIP: STRING, loadBalancerSourceRanges: [STRING], ports: [#/definitions/io.k8s.api.core.v1.ServicePort], publishNotReadyAddresses: BOOLEAN, selector: MAP, sessionAffinity: STRING, sessionAffinityConfig: #/definitions/io.k8s.api.core.v1.SessionAffinityConfig, trafficDistribution: STRING, type: STRING)
  io.k8s.api.core.v1.ServiceStatus: 2 properties (conditions: [#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Condition], loadBalancer: #/definitions/io.k8s.api.core.v1.LoadBalancerStatus)
  io.k8s.api.core.v1.SessionAffinityConfig: 1 property (clientIP: #/definitions/io.k8s.api.core.v1.ClientIPConfig)
  io.k8s.api.core.v1.SleepAction: 1 property (seconds: INTEGER)
  io.k8s.api.core.v1.StorageOSPersistentVolumeSource: 5 properties (fsType: STRING, readOnly: BOOLEAN, secretRef: #/definitions/io.k8s.api.core.v1.ObjectReference, volumeName: STRING, volumeNamespace: STRING)
  io.k8s.api.core.v1.StorageOSVolumeSource: 5 properties (fsType: STRING, readOnly: BOOLEAN, secretRef: #/definitions/io.k8s.api.core.v1.LocalObjectReference, volumeName: STRING, volumeNamespace: STRING)
  io.k8s.api.core.v1.Sysctl: 2 properties (name: STRING, value: STRING)
  io.k8s.api.core.v1.TCPSocketAction: 2 properties (host: STRING, port: #/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString)
  io.k8s.api.core.v1.Taint: 4 properties (effect: STRING, key: STRING, timeAdded: DATETIME_UTC, value: STRING)
  io.k8s.api.core.v1.Toleration: 5 properties (effect: STRING, key: STRING, operator: STRING, tolerationSeconds: INTEGER, value: STRING)
  io.k8s.api.core.v1.TopologySelectorLabelRequirement: 2 properties (key: STRING, values: [STRING])
  io.k8s.api.core.v1.TopologySelectorTerm: 1 property (matchLabelExpressions: [#/definitions/io.k8s.api.core.v1.TopologySelectorLabelRequirement])
  io.k8s.api.core.v1.TopologySpreadConstraint: 8 properties (labelSelector: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector, matchLabelKeys: [STRING], maxSkew: INTEGER, minDomains: INTEGER, nodeAffinityPolicy: STRING, nodeTaintsPolicy: STRING, topologyKey: STRING, whenUnsatisfiable: STRING)
  io.k8s.api.core.v1.TypedLocalObjectReference: 3 properties (apiGroup: STRING, kind: STRING, name: STRING)
  io.k8s.api.core.v1.TypedObjectReference: 4 properties (apiGroup: STRING, kind: STRING, name: STRING, namespace: STRING)
  io.k8s.api.core.v1.Volume: 31 properties (awsElasticBlockStore: #/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource, azureDisk: #/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource, azureFile: #/definitions/io.k8s.api.core.v1.AzureFileVolumeSource, cephfs: #/definitions/io.k8s.api.core.v1.CephFSVolumeSource, cinder: #/definitions/io.k8s.api.core.v1.CinderVolumeSource, configMap: #/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource, csi: #/definitions/io.k8s.api.core.v1.CSIVolumeSource, downwardAPI: #/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource, emptyDir: #/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource, ephemeral: #/definitions/io.k8s.api.core.v1.EphemeralVolumeSource, fc: #/definitions/io.k8s.api.core.v1.FCVolumeSource, flexVolume: #/definitions/io.k8s.api.core.v1.FlexVolumeSource, flocker: #/definitions/io.k8s.api.core.v1.FlockerVolumeSource, gcePersistentDisk: #/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource, gitRepo: #/definitions/io.k8s.api.core.v1.GitRepoVolumeSource, glusterfs: #/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource, hostPath: #/definitions/io.k8s.api.core.v1.HostPathVolumeSource, image: #/definitions/io.k8s.api.core.v1.ImageVolumeSource, iscsi: #/definitions/io.k8s.api.core.v1.ISCSIVolumeSource, name: STRING, nfs: #/definitions/io.k8s.api.core.v1.NFSVolumeSource, persistentVolumeClaim: #/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource, photonPersistentDisk: #/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource, portworxVolume: #/definitions/io.k8s.api.core.v1.PortworxVolumeSource, projected: #/definitions/io.k8s.api.core.v1.ProjectedVolumeSource, quobyte: #/definitions/io.k8s.api.core.v1.QuobyteVolumeSource, rbd: #/definitions/io.k8s.api.core.v1.RBDVolumeSource, scaleIO: #/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource, secret: #/definitions/io.k8s.api.core.v1.SecretVolumeSource, storageos: #/definitions/io.k8s.api.core.v1.StorageOSVolumeSource, vsphereVolume: #/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource)
  io.k8s.api.core.v1.VolumeDevice: 2 properties (devicePath: STRING, name: STRING)
  io.k8s.api.core.v1.VolumeMount: 7 properties (mountPath: STRING, mountPropagation: STRING, name: STRING, readOnly: BOOLEAN, recursiveReadOnly: STRING, subPath: STRING, subPathExpr: STRING)
  io.k8s.api.core.v1.VolumeMountStatus: 4 properties (mountPath: STRING, name: STRING, readOnly: BOOLEAN, recursiveReadOnly: STRING)
  io.k8s.api.core.v1.VolumeNodeAffinity: 1 property (required: #/definitions/io.k8s.api.core.v1.NodeSelector)
  io.k8s.api.core.v1.VolumeProjection: 5 properties (clusterTrustBundle: #/definitions/io.k8s.api.core.v1.ClusterTrustBundleProjection, configMap: #/definitions/io.k8s.api.core.v1.ConfigMapProjection, downwardAPI: #/definitions/io.k8s.api.core.v1.DownwardAPIProjection, secret: #/definitions/io.k8s.api.core.v1.SecretProjection, serviceAccountToken: #/definitions/io.k8s.api.core.v1.ServiceAccountTokenProjection)
  io.k8s.api.core.v1.VolumeResourceRequirements: 2 properties (limits: MAP, requests: MAP)
  io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource: 4 properties (fsType: STRING, storagePolicyID: STRING, storagePolicyName: STRING, volumePath: STRING)
  io.k8s.api.core.v1.WeightedPodAffinityTerm: 2 properties (podAffinityTerm: #/definitions/io.k8s.api.core.v1.PodAffinityTerm, weight: INTEGER)
  io.k8s.api.core.v1.WindowsSecurityContextOptions: 4 properties (gmsaCredentialSpec: STRING, gmsaCredentialSpecName: STRING, hostProcess: BOOLEAN, runAsUserName: STRING)
  io.k8s.api.networking.v1.HTTPIngressPath: 3 properties (backend: #/definitions/io.k8s.api.networking.v1.IngressBackend, path: STRING, pathType: STRING)
  io.k8s.api.networking.v1.HTTPIngressRuleValue: 1 property (paths: [#/definitions/io.k8s.api.networking.v1.HTTPIngressPath])
  io.k8s.api.networking.v1.IPBlock: 2 properties (cidr: STRING, except: [STRING])
  io.k8s.api.networking.v1.IngressBackend: 2 properties (resource: #/definitions/io.k8s.api.core.v1.TypedLocalObjectReference, service: #/definitions/io.k8s.api.networking.v1.IngressServiceBackend)
  io.k8s.api.networking.v1.IngressLoadBalancerIngress: 3 properties (hostname: STRING, ip: STRING, ports: [#/definitions/io.k8s.api.networking.v1.IngressPortStatus])
  io.k8s.api.networking.v1.IngressLoadBalancerStatus: 1 property (ingress: [#/definitions/io.k8s.api.networking.v1.IngressLoadBalancerIngress])
  io.k8s.api.networking.v1.IngressPortStatus: 3 properties (error: STRING, port: INTEGER, protocol: STRING)
  io.k8s.api.networking.v1.IngressRule: 2 properties (host: STRING, http: #/definitions/io.k8s.api.networking.v1.HTTPIngressRuleValue)
  io.k8s.api.networking.v1.IngressServiceBackend: 2 properties (name: STRING, port: #/definitions/io.k8s.api.networking.v1.ServiceBackendPort)
  io.k8s.api.networking.v1.IngressSpec: 4 properties (defaultBackend: #/definitions/io.k8s.api.networking.v1.IngressBackend, ingressClassName: STRING, rules: [#/definitions/io.k8s.api.networking.v1.IngressRule], tls: [#/definitions/io.k8s.api.networking.v1.IngressTLS])
  io.k8s.api.networking.v1.IngressStatus: 1 property (loadBalancer: #/definitions/io.k8s.api.networking.v1.IngressLoadBalancerStatus)
  io.k8s.api.networking.v1.IngressTLS: 2 properties (hosts: [STRING], secretName: STRING)
  io.k8s.api.networking.v1.NetworkPolicyEgressRule: 2 properties (ports: [#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort], to: [#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer])
  io.k8s.api.networking.v1.NetworkPolicyIngressRule: 2 properties (from: [#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer], ports: [#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort])
  io.k8s.api.networking.v1.NetworkPolicyPeer: 3 properties (ipBlock: #/definitions/io.k8s.api.networking.v1.IPBlock, namespaceSelector: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector, podSelector: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector)
  io.k8s.api.networking.v1.NetworkPolicyPort: 3 properties (endPort: INTEGER, port: #/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString, protocol: STRING)
  io.k8s.api.networking.v1.NetworkPolicySpec: 4 properties (egress: [#/definitions/io.k8s.api.networking.v1.NetworkPolicyEgressRule], ingress: [#/definitions/io.k8s.api.networking.v1.NetworkPolicyIngressRule], podSelector: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector, policyTypes: [STRING])
  io.k8s.api.networking.v1.ServiceBackendPort: 2 properties (name: STRING, number: INTEGER)
  io.k8s.apimachinery.pkg.apis.meta.v1.Condition: 6 properties (lastTransitionTime: DATETIME_UTC, message: STRING, observedGeneration: INTEGER, reason: STRING, status: STRING, type: STRING)
  io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector: 2 properties (matchExpressions: [#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement], matchLabels: MAP)
  io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement: 3 properties (key: STRING, operator: STRING, values: [STRING])
  io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry: 7 properties (apiVersion: STRING, fieldsType: STRING, fieldsV1: #/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1, manager: STRING, operation: STRING, subresource: STRING, time: DATETIME_UTC)
  io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta: 15 properties (annotations: MAP, creationTimestamp: DATETIME_UTC, deletionGracePeriodSeconds: INTEGER, deletionTimestamp: DATETIME_UTC, finalizers: [STRING], generateName: STRING, generation: INTEGER, labels: MAP, managedFields: [#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry], name: STRING, namespace: STRING, ownerReferences: [#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference], resourceVersion: STRING, selfLink: STRING, uid: STRING)
  io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference: 6 properties (apiVersion: STRING, blockOwnerDeletion: BOOLEAN, controller: BOOLEAN, kind: STRING, name: STRING, uid: STRING)
  io.k8s.apimachinery.pkg.version.Info: 9 properties (buildDate: STRING, compiler: STRING, gitCommit: STRING, gitTreeState: STRING, gitVersion: STRING, goVersion: STRING, major: STRING, minor: STRING, platform: STRING)

## Node connectivity, nodes are connected with the following relationships
```
(:ReplicaSet)-[:BelongsTo]->(:Namespace)
(:Job)-[:BelongsTo]->(:Namespace)
(:DaemonSet)-[:Manages]->(:Pod)
(:Node)-[:Manages]->(:Pod)
(:Job)-[:PartOf]->(:Cluster)
(:Ingress)-[:PartOf]->(:Cluster)
(:StatefulSet)-[:PartOf]->(:Cluster)
(:Pod)-[:RunsOn]->(:Node)
(:PersistentVolumeClaim)-[:PartOf]->(:Cluster)
(:ServiceAccount)-[:BelongsTo]->(:Namespace)
(:Node)-[:PartOf]->(:Cluster)
(:IngressServiceBackend)-[:TargetsService]->(:Service)
(:PersistentVolume)-[:UsesStorageClass]->(:StorageClass)
(:Pod)-[:PartOf]->(:Cluster)
(:ServiceAccount)-[:PartOf]->(:Cluster)
(:Service)-[:BelongsTo]->(:Namespace)
(:PersistentVolumeClaim)-[:BoundTo]->(:PersistentVolume)
(:Deployment)-[:Manages]->(:ReplicaSet)
(:PersistentVolume)-[:PartOf]->(:Cluster)
(:Namespace)-[:PartOf]->(:Cluster)
(:EndpointAddress)-[:IsAddressOf]->(:Pod)
(:StorageClass)-[:UsesProvisioner]->(:Provisioner)
(:Host)-[:IsClaimedBy]->(:Ingress)
(:Deployment)-[:BelongsTo]->(:Namespace)
(:DaemonSet)-[:BelongsTo]->(:Namespace)
(:StatefulSet)-[:BelongsTo]->(:Namespace)
(:ConfigMap)-[:BelongsTo]->(:Namespace)
(:Deployment)-[:PartOf]->(:Cluster)
(:Ingress)-[:BelongsTo]->(:Namespace)
(:Endpoints)-[:PartOf]->(:Cluster)
(:StatefulSet)-[:Manages]->(:Pod)
(:Service)-[:Selects]->(:Pod)
(:ReplicaSet)-[:PartOf]->(:Cluster)
(:Endpoints)-[:BelongsTo]->(:Namespace)
(:StorageClass)-[:PartOf]->(:Cluster)
(:Provisioner)-[:PartOf]->(:Cluster)
(:Job)-[:Manages]->(:Pod)
(:EndpointAddress)-[:ListedIn]->(:Endpoints)
(:Pod)-[:ClaimsVolume]->(:PersistentVolumeClaim)
(:Pod)-[:BelongsTo]->(:Namespace)
(:ConfigMap)-[:PartOf]->(:Cluster)
(:ReplicaSet)-[:Manages]->(:Pod)
(:Ingress)-[:DefinesBackend]->(:IngressServiceBackend)
(:PersistentVolumeClaim)-[:BelongsTo]->(:Namespace)
(:Service)-[:PartOf]->(:Cluster)
(:DaemonSet)-[:PartOf]->(:Cluster)
(:Pod)-[:HasLogs]->(:Logs)
```
## Hints
When dealing with pods and their resources (type `io.k8s.api.core.v1.ResourceRequirements`), make sure to parse the quantity correctly. Limits and requests for memory are measured in bytes.
It can be expresses memory as a plain integer or as a fixed-point number using one of these quantity suffixes: E, P, T, G, M, k. Or the power-of-two equivalents can be used: Ei, Pi, Ti, Gi, Mi, Ki. For example, the following represent roughly the same value: 128974848, 129e6, 129M,  128974848000m, 123Mi. Pay attention to the case of the suffixes.

Below is an example of query that correctly derives the total CPU and RAM request/limits
```cypher
MATCH (p:Pod)
UNWIND p['spec']['containers'] AS container
WITH p, container['resources']['requests'] AS reqs, container['resources']['limits'] AS lims
WITH p, reqs, lims,
  CASE
    WHEN lims['memory'] ENDS WITH 'Ti' THEN toFloat(replace(lims['memory'], 'Ti', '')) * 1024 * 1024
    WHEN lims['memory'] ENDS WITH 'Gi' THEN toFloat(replace(lims['memory'], 'Gi', '')) * 1024
    WHEN lims['memory'] ENDS WITH 'Mi' THEN toFloat(replace(lims['memory'], 'Mi', ''))
    WHEN lims['memory'] ENDS WITH 'Ki' THEN toFloat(replace(lims['memory'], 'Ki', '')) / 1024
    ELSE toFloat(lims['memory'])
  END AS lim_memory_mib,
  CASE
    WHEN reqs['memory'] ENDS WITH 'Ti' THEN toFloat(replace(reqs['memory'], 'Ti', '')) * 1024 * 1024
    WHEN reqs['memory'] ENDS WITH 'Gi' THEN toFloat(replace(reqs['memory'], 'Gi', '')) * 1024
    WHEN reqs['memory'] ENDS WITH 'Mi' THEN toFloat(replace(reqs['memory'], 'Mi', ''))
    WHEN reqs['memory'] ENDS WITH 'Ki' THEN toFloat(replace(reqs['memory'], 'Ki', '')) / 1024
    ELSE toFloat(reqs['memory'])
  END AS req_memory_mib
RETURN p.metadata.name,
  SUM(req_memory_mib),
  SUM(lim_memory_mib),
  SUM(toFloat(reqs['cpu'])),
  SUM(toFloat(lims['cpu']))
```